var Doorlock=(()=>{var B=Object.defineProperty;var A=k=>B(k,"__esModule",{value:!0});var x=(k,e)=>{A(k);for(var o in e)B(k,o,{get:e[o],enumerable:!0})};var O={};x(O,{default:()=>F});var P="2.0.2";var E=class{constructor({superAdminId:e,fetchRolesById:o,fetchPermissionsById:n,fetchRestrictionsById:r,fetchRolesByHandle:i,fetchPermissionsByHandle:t,fetchRestrictionsByHandle:I,verifyRoleExists:p,verifyAbilitiesExist:a,debug:u,logFn:y}){this.verifyRoleExists=!1;this.verifyAbilitiesExist=!1;this.debug=!1;this.logFn=console.log;this.checkSuperAdmin=({userId:e})=>!!(this.superAdminId&&e===this.superAdminId);this.logAbilityEvaluation=({userId:e,wasAllowed:o,resourceName:n,resourceIdentifier:r,reason:i})=>{if(this.debug){let t=`user ${e} was ${o?"allowed":"not allowed"} access`;t+=n||r?` to ${n?`${n}`:""} ${r?`${r}`:""}`:"",t+=i?` due to: ${i}`:"",this.logFn(t)}};this.verifyEntityExistence=async({userId:e,entityHandles:o,entityIds:n,entityName:r,resourceName:i,resourceIdentifier:t,fetchByIdsFn:I,fetchByHandlesFn:p})=>{let a=[],u=await I(n),y=await p(o);if(u.forEach(s=>a.push(s)),y.forEach(s=>a.push(s)),a.length!==n.length+o.length){let s=[];n.forEach(h=>{a.find(f=>f.entityId===h)||s.push(h)}),o.forEach(h=>{a.find(f=>f.handle===h)||s.push(h)});let m=s.length===0?`${r} count does not match, this means there are duplicate ${r}s either on the user record or the resource definition, cowardly refusing to continue`:`non-existing ${r}(s) (${s.join()})`;throw this.logAbilityEvaluation({userId:e,wasAllowed:!1,resourceName:i,resourceIdentifier:t,reason:m}),new Error(m)}return{userEntities:u,appEntities:y}};this.evaluateAbilities=async(e,{roleHandles:o,permissionHandles:n,restrictionHandles:r,resourceName:i,resourceIdentifier:t})=>{if(this.checkSuperAdmin(e))return this.logAbilityEvaluation({userId:e.userId,wasAllowed:!0,resourceName:i,resourceIdentifier:t,reason:"is super admin"}),!0;if(o.length+n.length+r.length<1)throw this.logAbilityEvaluation({userId:e.userId,wasAllowed:!1,resourceName:i,resourceIdentifier:t,reason:"only super admin allowed"}),new Error("Unauthorized");let I=n.length+r.length<1,{userId:p,roles:a,abilities:{permissions:u,restrictions:y}}=e,s,m,h,g,f,L;if(this.verifyRoleExists){let c=await this.verifyEntityExistence({userId:p,entityIds:a,entityHandles:o,entityName:"role",resourceName:i,resourceIdentifier:t,fetchByIdsFn:this.fetchRolesById,fetchByHandlesFn:this.fetchRolesByHandle});s=c.userEntities,g=c.appEntities}else s=await this.fetchRolesById(a),g=await this.fetchRolesByHandle(o);if(this.verifyAbilitiesExist){let c=await this.verifyEntityExistence({userId:p,entityIds:u,entityHandles:n,entityName:"permission",resourceName:i,resourceIdentifier:t,fetchByIdsFn:this.fetchPermissionsById,fetchByHandlesFn:this.fetchPermissionsByHandle});m=c.userEntities,f=c.appEntities;let l=await this.verifyEntityExistence({userId:p,entityIds:y,entityHandles:r,entityName:"restriction",resourceName:i,resourceIdentifier:t,fetchByIdsFn:this.fetchRestrictionsById,fetchByHandlesFn:this.fetchRestrictionsByHandle});h=l.userEntities,L=l.appEntities}else m=await this.fetchPermissionsById(u),h=await this.fetchRestrictionsById(y),f=await this.fetchPermissionsByHandle(n),L=await this.fetchRestrictionsByHandle(r);if(s.length+m.length<1)throw this.logAbilityEvaluation({userId:e.userId,wasAllowed:!1,resourceName:i,resourceIdentifier:t,reason:"user has no permissions whatsoever"}),new Error("Unauthorized");let b=I?s.reduce((c,l)=>c||typeof g.find(d=>l.entityId===d.entityId)!="undefined",!1):s.length>0&&s.reduce((c,l)=>c&&l.abilities.permissions.reduce((d,D)=>d||typeof f.find(R=>D===R.entityId)!="undefined",!1)&&l.abilities.restrictions.reduce((d,D)=>d&&typeof L.find(R=>D===R.entityId)=="undefined",!0)||typeof g.find(d=>l.entityId===d.entityId)!="undefined"&&l.abilities.restrictions.reduce((d,D)=>d&&typeof L.find(R=>D===R.entityId)=="undefined",!0),!0),v=m.reduce((c,l)=>c||typeof f.find(d=>l.entityId===d.entityId)!="undefined",!1),w=h.reduce((c,l)=>c&&typeof L.find(d=>l.entityId===d.entityId)=="undefined",!0);if((b||v)&&w)return this.logAbilityEvaluation({userId:e.userId,wasAllowed:!0,resourceName:i,resourceIdentifier:t,reason:"user has the proper permissions and no restrictions"}),!0;throw this.logAbilityEvaluation({userId:e.userId,wasAllowed:!1,resourceName:i,resourceIdentifier:t,reason:"none of the user permissions match resource requirements"}),new Error("Unauthorized")};this.superAdminId=e,this.fetchRolesById=o,this.fetchPermissionsById=n,this.fetchRestrictionsById=r,this.fetchRolesByHandle=i,this.fetchPermissionsByHandle=t,this.fetchRestrictionsByHandle=I,this.verifyRoleExists=p||this.verifyRoleExists,this.verifyAbilitiesExist=a||this.verifyAbilitiesExist,this.debug=Boolean(u),this.logFn=y||this.logFn,this.logFn("DoorLock initiated with options:",{superAdminId:this.superAdminId,fetchRolesById:this.fetchRolesById,fetchPermissionsById:this.fetchPermissionsById,fetchRestrictionsById:this.fetchRestrictionsById,fetchRolesByHandle:this.fetchRolesByHandle,fetchPermissionsByHandle:this.fetchPermissionsByHandle,fetchRestrictionsByHandle:this.fetchRestrictionsByHandle,verifyRoleExists:this.verifyRoleExists,verifyAbilitiesExist:this.verifyAbilitiesExist,debug:this.debug,logFn:y})}};E.version=P;var F=E;return O;})();
'undefined'!=typeof module&&(module.exports=Doorlock.default),'undefined'!=typeof window&&(Doorlock=Doorlock.default);