var Doorlock=(()=>{var R=Object.defineProperty;var w=g=>R(g,"__esModule",{value:!0});var A=(g,e)=>{w(g);for(var o in e)R(g,o,{get:e[o],enumerable:!0})};var F={};A(F,{default:()=>H});var E="1.2.0";var D=class{constructor({superAdminId:e,fetchRolesById:o,fetchPermissionsById:t,fetchRestrictionsById:n,fetchRolesByHandle:s,fetchPermissionsByHandle:i,fetchRestrictionsByHandle:f,verifyRoleExists:u,verifyAbilitiesExist:l,debug:y,logFn:a}){this.verifyRoleExists=!1;this.verifyAbilitiesExist=!1;this.debug=!1;this.logFn=console.log;this.checkSuperAdmin=({id:e})=>!!(this.superAdminId&&e===this.superAdminId);this.logAbilityEvaluation=({userId:e,wasAllowed:o,resourceName:t,resourceIdentifier:n,reason:s})=>{if(this.debug){let i=`user ${e} was ${o?"allowed":"not allowed"} access`;i+=t||n?` to ${t?`${t}`:""} ${n?`${n}`:""}`:"",i+=s?` due to: ${s}`:"",this.logFn(i)}};this.verifyEntityExistence=async({userId:e,entityHandles:o,entityIds:t,entityName:n,resourceName:s,resourceIdentifier:i,fetchByIdsFn:f,fetchByHandlesFn:u})=>{let l=[],y=await f(t),a=await u(o);if(y.forEach(r=>l.push(r)),a.forEach(r=>l.push(r)),l.length!==t.length+o.length){let r=[];t.forEach(d=>{l.find(p=>p.id===d)||r.push(d)}),o.forEach(d=>{l.find(p=>p.handle===d)||r.push(d)});let m=r.length===0?`${n} count does not match, this means there are duplicate ${n}s either on the user record or the resource definition, cowardly refusing to continue`:`non-existing ${n}(s) (${r.join()})`;throw this.logAbilityEvaluation({userId:e,wasAllowed:!1,resourceName:s,resourceIdentifier:i,reason:m}),new Error(m)}return{userEntities:y,appEntities:a}};this.evaluateAbilities=async(e,{roleHandles:o,permissionHandles:t,restrictionHandles:n,resourceName:s,resourceIdentifier:i})=>{if(this.checkSuperAdmin(e))return this.logAbilityEvaluation({userId:e.id,wasAllowed:!0,resourceName:s,resourceIdentifier:i,reason:"is super admin"}),!0;if(o.length+t.length+n.length<1)throw this.logAbilityEvaluation({userId:e.id,wasAllowed:!1,resourceName:s,resourceIdentifier:i,reason:"only super admin allowed"}),new Error("Unauthorized");let{id:f,roles:u,abilities:{permissions:l,restrictions:y}}=e,a,r,m,d,k,p;if(this.verifyRoleExists){let c=await this.verifyEntityExistence({userId:f,entityIds:u,entityHandles:o,entityName:"role",resourceName:s,resourceIdentifier:i,fetchByIdsFn:this.fetchRolesById,fetchByHandlesFn:this.fetchRolesByHandle});a=c.userEntities,d=c.appEntities}else a=await this.fetchRolesById(u),d=await this.fetchRolesByHandle(o);if(this.verifyAbilitiesExist){let c=await this.verifyEntityExistence({userId:f,entityIds:l,entityHandles:t,entityName:"permission",resourceName:s,resourceIdentifier:i,fetchByIdsFn:this.fetchPermissionsById,fetchByHandlesFn:this.fetchPermissionsByHandle});r=c.userEntities,k=c.appEntities;let h=await this.verifyEntityExistence({userId:f,entityIds:y,entityHandles:n,entityName:"restriction",resourceName:s,resourceIdentifier:i,fetchByIdsFn:this.fetchRestrictionsById,fetchByHandlesFn:this.fetchRestrictionsByHandle});m=h.userEntities,p=h.appEntities}else r=await this.fetchPermissionsById(l),m=await this.fetchRestrictionsById(y),k=await this.fetchPermissionsByHandle(t),p=await this.fetchRestrictionsByHandle(n);if(a.length+r.length<1)throw this.logAbilityEvaluation({userId:e.id,wasAllowed:!1,resourceName:s,resourceIdentifier:i,reason:"user has no permissions whatsoever"}),new Error("Unauthorized");let B=a.reduce((c,h)=>c||typeof d.find(L=>h.id===L.id)!="undefined"||h.abilities.permissions.reduce((L,I)=>L||typeof k.find(v=>I===v.id)!="undefined",!1),!1),P=r.reduce((c,h)=>c||typeof k.find(L=>h.id===L.id)!="undefined",!1),b=m.reduce((c,h)=>c&&!p.includes(h),!0);if((B||P)&&b)return this.logAbilityEvaluation({userId:e.id,wasAllowed:!0,resourceName:s,resourceIdentifier:i,reason:"user has the proper permissions and no restrictions"}),!0;throw this.logAbilityEvaluation({userId:e.id,wasAllowed:!1,resourceName:s,resourceIdentifier:i,reason:"non of the user permissions match resource requirements"}),new Error("Unauthorized")};this.superAdminId=e,this.fetchRolesById=o,this.fetchPermissionsById=t,this.fetchRestrictionsById=n,this.fetchRolesByHandle=s,this.fetchPermissionsByHandle=i,this.fetchRestrictionsByHandle=f,this.verifyRoleExists=u||this.verifyRoleExists,this.verifyAbilitiesExist=l||this.verifyAbilitiesExist,this.debug=Boolean(y),this.logFn=a||this.logFn,console.log("DoorLock initiated with options:",{superAdminId:this.superAdminId,fetchRolesById:this.fetchRolesById,fetchPermissionsById:this.fetchPermissionsById,fetchRestrictionsById:this.fetchRestrictionsById,fetchRolesByHandle:this.fetchRolesByHandle,fetchPermissionsByHandle:this.fetchPermissionsByHandle,fetchRestrictionsByHandle:this.fetchRestrictionsByHandle,verifyRoleExists:this.verifyRoleExists,verifyAbilitiesExist:this.verifyAbilitiesExist,debug:this.debug,logFn:a})}};D.version=E;var H=D;return F;})();
'undefined'!=typeof module&&(module.exports=Doorlock.default),'undefined'!=typeof window&&(Doorlock=Doorlock.default);